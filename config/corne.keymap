/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

&mt {
    tapping-term-ms = <500>;
    flavor = "tap-preferred";
};

/ {
    combos {
        compatible = "zmk,combos";

        new_combo {
            bindings = <&mo 3>;
            key-positions = <37 40>;
        };
    };

    behaviors {
        shift_lock: shift_lock {
            compatible = "zmk,behavior-tap-dance";
            label = "SHIFT_LOCK";
            #binding-cells = <0>;
            bindings =
                <&kp LEFT_SHIFT>,
                <&caps_word>;
        };
        layer_1: layer_1 {
            compatible = "zmk,behavior-tap-dance";
            label = "LAYER_1";
            #binding-cells = <0>;
            bindings =
                <&mo 1>,
                <&tog 1>;
        };
        layer_2: layer_2 {
            compatible = "zmk,behavior-tap-dance";
            label = "LAYER_2";
            #binding-cells = <0>;
            bindings =
                <&mo 2>,
                <&tog 2>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            label = "Base";
            bindings = <
&mt LG(TAB) TAB   &mt LG(Q) Q  &mt LG(W) W  &mt LG(E) E  &mt LG(R) R  &mt LG(T) T                    &mt LG(Y) Y  &mt LG(U) U  &mt LG(I) I          &mt LG(O) O            &mt LG(P) P                  &kp ESC
&kp LEFT_CONTROL  &mt LG(A) A  &mt LG(S) S  &mt LG(D) D  &mt LG(F) F  &mt LG(G) G                    &mt LG(H) H  &mt LG(J) J  &mt LG(K) K          &mt LG(L) L            &mt LG(SEMICOLON) SEMICOLON  &mt LG(SQT) SQT
&kp LEFT_ALT      &mt LG(Z) Z  &mt LG(X) X  &mt LG(C) C  &mt LG(V) V  &mt LG(B) B                    &mt LG(N) N  &mt LG(M) M  &mt LG(COMMA) COMMA  &mt LG(PERIOD) PERIOD  &mt LG(SLASH) SLASH          &kp ENTER
                                            &kp LGUI     &shift_lock  &mt LA(BACKSPACE) BACKSPACE    &kp SPACE    &layer_1     &layer_2
            >;
        };

        symbols {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            label = "Symbols";
            bindings = <
&trans  &kp EXCL      &kp AT        &kp HASH      &kp DLLR      &kp PRCNT       &kp CARET       &kp AMPS   &kp ASTERISK   &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp TILDE
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp NUMBER_5    &kp MINUS       &kp EQUAL  &kp BACKSLASH  &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp GRAVE
&trans  &kp NUMBER_6  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp NUMBER_0    &kp UNDERSCORE  &kp PLUS   &kp PIPE       &kp LEFT_BRACE        &kp RIGHT_BRACE        &trans
                                    &trans        &trans        &trans          &trans          &trans     &trans
            >;
        };

        function {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            label = "Function";
            bindings = <
&trans  &mt LG(NUMBER_1) NUMBER_1  &mt LG(NUMBER_2) NUMBER_2  &mt LG(NUMBER_3) NUMBER_3  &mt LG(NUMBER_4) NUMBER_4  &mt LG(NUMBER_5) NUMBER_5    &mt LG(NUMBER_6) NUMBER_6      &mt LG(NUMBER_7) NUMBER_7  &mt LG(NUMBER_8) NUMBER_8  &mt LG(NUMBER_9) NUMBER_9        &mt LG(NUMBER_0) NUMBER_0  &trans
&trans  &kp LG(LS(NUMBER_5))       &kp C_VOLUME_DOWN          &kp C_MUTE                 &kp C_VOLUME_UP            &kp C_BRIGHTNESS_INC         &mt LA(LEFT_ARROW) LEFT_ARROW  &mt LA(DOWN_ARROW) DOWN    &mt LA(UP_ARROW) UP_ARROW  &mt LA(RIGHT_ARROW) RIGHT_ARROW  &none                      &none
&trans  &kp LG(LS(NUMBER_4))       &kp C_PREV                 &kp C_PLAY_PAUSE           &kp C_NEXT                 &kp C_BRIGHTNESS_DEC         &none                          &none                      &none                      &none                            &none                      &trans
                                                              &trans                     &trans                     &trans                       &trans                         &trans                     &trans
            >;
        };

        bluetooth {
            bindings = <
&trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &none   &none   &none   &none  &bt BT_CLR  &trans
&trans  &none         &none         &none         &none         &none           &none   &none   &none   &none  &none       &none
&trans  &none         &none         &none         &none         &none           &none   &none   &none   &none  &none       &trans
                                    &trans        &trans        &trans          &trans  &trans  &trans
            >;

            label = "Bluetooth";
        };
    };
};
